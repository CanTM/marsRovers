package controller;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class InstructionsProcessor {

	public static void main(String[] args) {

		BufferedReader br = null;
		FileReader fr = null;

		try {

			String sCurrentLine;

			br = new BufferedReader(new FileReader("input.txt"));

			StringBuilder sb = new StringBuilder();

			int lineNumber = 1;
			int width = 0;
			int hight = 0;
			int x = 0;
			int y = 0;
			char direction = 0;
			PositionController ps = null;
			String verification = null;

			executeInstructions: while ((sCurrentLine = br.readLine()) != null) {
				if (lineNumber == 1) {
					verification = InputVerifier.verifyPlateauDimensions(sCurrentLine);
					if (verification.equals("OK")) {
						width = Integer.parseInt(sCurrentLine.substring(0, 1));
						hight = Integer.parseInt(sCurrentLine.substring(2, 3));
						lineNumber++;
					} else {
						sb.append(verification);
						break executeInstructions;
					}
				} else if (lineNumber % 2 == 0) {
					if (verification.equals("OK")) {
						verification = InputVerifier.verifyRoverInitialPosition(sCurrentLine, width, hight);
						x = Integer.parseInt(sCurrentLine.substring(0, 1));
						y = Integer.parseInt(sCurrentLine.substring(2, 3));
						direction = sCurrentLine.charAt(4);
						ps = new PositionController(width, hight, x, y, direction);
						lineNumber++;
					} else {
						sb.append(verification);
						br.readLine();
						lineNumber = lineNumber + 2;
					}
				} else {
					for (char instruction : sCurrentLine.toCharArray()) {
						ps.sendInstruction(instruction);
					}
					sb.append(ps.getRover().toString() + "\n");
					lineNumber++;
				}
			}

			FileWriter fw = new FileWriter("output.txt");
			fw.write(sb.toString());
			fw.close();

		} catch (IOException e) {

			e.printStackTrace();

		} finally {

			try {

				if (br != null) {
					br.close();
				}

				if (fr != null) {
					fr.close();
				}

			} catch (IOException ex) {

				ex.printStackTrace();

			}

		}

	}

}
