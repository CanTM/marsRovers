package controllerTest;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

import controller.InputVerifier;

public class InputVerifierTest {

	@Test
	public void emptyPlateauTest() {
		String verify = InputVerifier.verifyPlateauDimensions(null);
		assertEquals("Error message is not correct", "Plateau dimensions not specified", verify);
		verify = InputVerifier.verifyPlateauDimensions("");
		assertEquals("Error message is not correct", "Plateau dimensions not specified", verify);
	}

	@Test
	public void malformedPlateauTest() {
		String verify = InputVerifier.verifyPlateauDimensions("5");
		assertEquals("Error message is not correct", "Incorrect plateau dimensions instructions format", verify);
		verify = InputVerifier.verifyPlateauDimensions("555");
		assertEquals("Error message is not correct", "Incorrect plateau dimensions instructions format", verify);
	}

	@Test
	public void notNaturalNumberPlateauTest() {
		String verify = InputVerifier.verifyPlateauDimensions("A 7");
		assertEquals("Error message is not correct", "Plateau width is not a natural number", verify);
		verify = InputVerifier.verifyPlateauDimensions("0 7");
		assertEquals("Error message is not correct", "Plateau width is not a natural number", verify);
		verify = InputVerifier.verifyPlateauDimensions("7 A");
		assertEquals("Error message is not correct", "Plateau hight is not a natural number", verify);
		verify = InputVerifier.verifyPlateauDimensions("7 0");
		assertEquals("Error message is not correct", "Plateau hight is not a natural number", verify);
	}

	@Test
	public void PlateauTest() {
		String verify = InputVerifier.verifyPlateauDimensions("8 7");
		assertEquals("Error message is not correct", "Ok", verify);
	}

	@Test
	public void RoverTest() {
		String verify = InputVerifier.verifyRoverInitialPosition("4 5 N", 10, 10);
		assertEquals("Error message is not correct", "Ok", verify);
	}

	@Test
	public void emptyRoverTest() {
		String verify = InputVerifier.verifyRoverInitialPosition(null, 10, 10);
		assertEquals("Error message is not correct", "Rover initial position not specified", verify);
		verify = InputVerifier.verifyRoverInitialPosition("", 10, 10);
		assertEquals("Error message is not correct", "Rover initial position not specified", verify);
	}
	
	@Test
	public void malformedRoverTest() {
		String verify = InputVerifier.verifyRoverInitialPosition("5 8 NN", 10, 10);
		assertEquals("Error message is not correct", "Incorrect inicial rover position instructions format", verify);
		verify = InputVerifier.verifyRoverInitialPosition("58 NN", 10, 10);
		assertEquals("Error message is not correct", "Incorrect inicial rover position instructions format", verify);
		verify = InputVerifier.verifyRoverInitialPosition("5 8NN", 10, 10);
		assertEquals("Error message is not correct", "Incorrect inicial rover position instructions format", verify);
	}

}
